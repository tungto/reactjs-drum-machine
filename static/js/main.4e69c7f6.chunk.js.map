{"version":3,"sources":["components/ToggleButton.js","components/Display.js","components/DrumPad.js","container/DrumMachine.js","App.js","reportWebVitals.js","index.js"],"names":["ToggleButton","props","className","type","onClick","clicked","Display","id","powerControl","display","max","min","step","onChange","controlVolume","value","sliderVal","toggleBank","DrumPad","playSound","e","powerON","document","querySelector","name","play","handleKeyDown","keyCode","console","log","url","displayHandler","audio","React","createRef","addEventListener","this","removeEventListener","src","Component","DrumMachine","state","currentBank","bankOne","currentPadBankID","drumPads","bank","map","pad","keyTrigger","bankTwo","App","setState","preventDefault","text","target","slice","call","getElementsByClassName","forEach","sound","volume","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e69c7f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ToggleButton.css';\r\n\r\nconst ToggleButton = (props) => {\r\n  return (\r\n    // IF set onClick={props.toggleBank} on label toggleBank will be call twice because of capture pharse\r\n    // console.log(e.target) to check\r\n    <label className='switch'>\r\n      <input type='checkbox' onClick={props.clicked} />\r\n      <span className='slider round'></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React from 'react';\r\nimport ToggleButton from './ToggleButton';\r\nimport './Display.css';\r\n\r\nconst Display = (props) => {\r\n  return (\r\n    <div className='display-container drum-part' id='display'>\r\n      <ToggleButton clicked={props.powerControl} />\r\n      <div className='display'>\r\n        <span>{props.display}</span>\r\n      </div>\r\n      <div className='slidecontainer'>\r\n        <input\r\n          type='range'\r\n          max='1'\r\n          min='0'\r\n          step='0.01'\r\n          className='slider--volume'\r\n          id='myRange'\r\n          onChange={props.controlVolume}\r\n          value={props.sliderVal}\r\n        />\r\n      </div>\r\n      <ToggleButton clicked={props.toggleBank} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { Component } from 'react';\r\nimport './DrumPad.css';\r\n\r\nclass DrumPad extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.audio = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  playSound = (e) => {\r\n    // console.log(this.props.powerON);\r\n    if (this.props.powerON) {\r\n      const sound = document.querySelector(`#${this.props.name}`);\r\n      sound.play();\r\n    }\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    // console.log(e.keyCode);\r\n    if (this.props.powerON) {\r\n      if (e.keyCode === this.props.keyCode) {\r\n        this.playSound();\r\n        console.log(this.props.url);\r\n      }\r\n    }\r\n  };\r\n\r\n  clicked = () => {\r\n    console.log('iafd');\r\n    console.log(this.props.id);\r\n    this.playSound();\r\n    this.props.displayHandler(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.clicked} className='drum-pad' id={this.props.id}>\r\n        <audio\r\n          src={this.props.url}\r\n          id={this.props.name}\r\n          className='audio clip'\r\n        />\r\n        {this.props.name}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DrumPad;\r\n","import React, { Component } from 'react';\r\nimport Display from '../components/Display';\r\nimport DrumPad from '../components/DrumPad';\r\nimport './DrumMachine.css';\r\n\r\nclass DrumMachine extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentBank: props.bankOne,\r\n      display: this.props.currentPadBankID,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const currentBank = this.props.bank;\r\n    const drumPads = currentBank.map((pad) => {\r\n      return (\r\n        <DrumPad\r\n          name={pad.keyTrigger}\r\n          id={pad.id}\r\n          url={pad.url}\r\n          keyCode={pad.keyCode}\r\n          key={pad.id}\r\n          powerON={this.props.powerON}\r\n          displayHandler={this.props.displayHandler}\r\n        />\r\n      );\r\n    });\r\n    // console.log(this.props.soundInfo);\r\n\r\n    return (\r\n      <div id='drum-machine'>\r\n        <div className='drum-pad-container'>{drumPads}</div>\r\n        <Display\r\n          display={this.props.currentPadBankID}\r\n          toggleBank={this.props.toggleBank}\r\n          sliderVal={this.props.sliderVal}\r\n          controlVolume={this.props.controlVolume}\r\n          powerControl={this.props.powerControl}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DrumMachine;\r\n","import { Component } from 'react';\nimport './App.css';\nimport DrumMachine from './container/DrumMachine';\nimport ReactFCCtest from 'react-fcctest';\n\nconst bankOne = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Heater-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Heater-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Heater-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Heater-4',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Clap',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: \"Kick-n'-Hat\",\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\n  },\n];\n\nconst bankTwo = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Chord-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Chord-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Chord-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Shaker',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: 'Punchy-Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Side-Stick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Snare',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\n  },\n];\n\nclass App extends Component {\n  state = {\n    powerON: true,\n    currentBank: bankOne,\n    currentPadBankID: 'Heater Kit',\n    sliderVal: 0.3,\n  };\n  // componentDidMount() {\n  //   console.log(document.querySelectorAll('.drum-pad'));\n  // }\n\n  toggleBank = (e) => {\n    if (this.state.powerON) {\n      if (this.state.currentPadBankID === 'Heater Kit') {\n        this.setState({\n          currentBank: bankTwo,\n          currentPadBankID: 'Smooth Piano',\n        });\n      } else {\n        this.setState({\n          currentBank: bankOne,\n          currentPadBankID: 'Heater Kit',\n        });\n      }\n    } else {\n      e.preventDefault();\n    }\n  };\n  displayHandler = (text) => {\n    console.log(text);\n    this.setState({ currentPadBankID: text });\n  };\n\n  controlVolume = (e) => {\n    if (this.state.powerON) {\n      this.setState({ sliderVal: e.target.value });\n    }\n  };\n  powerControl = () => {\n    console.log(this.state.powerON);\n    this.setState({ powerON: !this.state.powerON });\n  };\n  render() {\n    {\n      // Turn nodelist to array\n      //https://attacomsian.com/blog/javascript-convert-nodelist-to-array#:~:text=In%20modern%20JavaScript%2C%20the%20simplest,an%20array%20const%20divsArr%20%3D%20Array.\n      const audios = [].slice.call(document.getElementsByClassName('clip'));\n\n      audios.forEach((sound) => (sound.volume = this.state.sliderVal));\n      // console.log(document.getElementsByClassName('audio'));\n      // can't select cause queryselector only works on mounted components\n      // console.log(document.querySelectorAll('.drum-pad'));\n    }\n    return (\n      <div className='App'>\n        <ReactFCCtest />\n        <DrumMachine\n          bank={this.state.currentBank}\n          toggleBank={this.toggleBank}\n          currentPadBankID={this.state.currentPadBankID}\n          controlVolume={this.controlVolume}\n          sliderVal={this.state.sliderVal}\n          powerControl={this.powerControl}\n          powerON={this.state.powerON}\n          displayHandler={this.displayHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}